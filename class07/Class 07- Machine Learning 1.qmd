---
title: "Class 7: Machine Learning 1"
author: "Tin Nguyen"
format: pdf
toc: true
---

Today we will explore unsupervised machine learning methods starting with clustering and dimensionality reduction.

## Clustering

To start let's make up some data to cluster where we know what the answer should be. The 'rnorm()' function will help us here.

```{r}

hist( rnorm(10000, mean = 3) )

```

Return 30 numbers centered on -3

```{r}

tmp <- c( rnorm(30, mean = -3), rnorm(30, mean = +3) )

x <- cbind(x = tmp, y = rev(tmp))


```

Make a plot of 'x'

```{r}

plot(x)

```

### K-means 

The main function in "base" R for K-means clustering is called 'kmeans()':


```{r}
km <- kmeans(x, centers = 2)
km 
```

The 'kmeans()' function return a "list" with 9 components. You can see the named components of any list with the 'attributes()' function.

```{r}
attributes(km)
```
> Q. How many points are in each cluster ?

```{r}
km$size
```

> Q. Cluster assignment/membership vector?

```{r}
km$cluster
```

> Q. Cluster centers?

```{r}
km$centers
```

> Q. Make a plot of our 'kmeans()' results showing cluster assignment using different colors for each cluster/group of points and cluster centers in blue.

```{r}

plot(x, col = km$cluster )
points(km$centers, col = "blue", pch = 2, cex = 2)

```

> Q, Run 'kmmeans()' again on 'x' and this cluster into 4 groups/ clusters and plot the same results figure as above.



```{r}

km2 <- kmeans(x, centers = 4)
plot(x, col = km2$cluster )
points(km2$centers, col = "blue", pch = 2, cex = 2)

```

> **key-point**: K-means clustering is super popular but can be miss-used. One big limitation is that it can impose a clustering pattern on your data even if clear natural goruping don't exist - i.e. it does what you tell it to do in terms of 'centers'.

### Hierarchical clustering

The main function in "base" R for herarchical clustering is called 'hclust()'. 

You can't just pass our dataset as is into 'hclust()' you must give "distacne matrix" as input. WE can get this from 'dist()' function in R.


```{r}

d <- dist(x)
hc <- hclust(d)
hc 

```

The results of 'hclust()' don't have a useful 'print()' method but do have a special 'plot()' method.

```{r}

plot(hc)
abline(h=8, col="red")

```

To get our main cluster assignment (membership vector) we need to "cut" the tree at the big goalposts...

```{r}

grps <- cutree(hc, h = 8)

```


```{r}

table(grps)

```

```{r}

plot(x, col = grps)

```

Hierarchical Clustering is distinct in that the dendrogram (tree figure) can reveal the potential grouping in your data (unlike K-means)


## Principal Component Analysis (PCA)

PCA is a common and highly useful dimensionality reuction technique used in many fields - particularly bioinformatics.

Here we will analyze some data from the UK on food consumption.

### Data import

```{r}

url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url)

head(x)
```

```{r}

x <- read.csv(url, row.names = 1)

head(x)

```
```{r}
barplot(as.matrix(x), beside=F, col=rainbow(nrow(x)))
```


One conventional plot that can be useful is called a "paris" plot.


```{r}
pairs(x, col=rainbow(nrow(x)), pch=16)
```

### PCA to the rescue

The main function in base R for PCA 'prcomp()'.

```{r}

pca <- prcomp( t(x) )

summary(pca)

```
### interpreting PCA Results.

The 'prcomp()' function returns a list object of our results with five attritubtes/components

```{r}

attributes(pca)

```
The two main "results" in here are 'pca$x' and 'pca$rotation'. The first of these ('pca$x') contains the scores of the data on the new PC axis - we use thse to make our "PCA plot".

```{r}

pca$x 

```

```{r}

library(ggplot2)
library(ggrepel)

# Make a plot of pca$x with PC1 vs PC2

ggplot(pca$x) + 
  aes(PC1, PC2, label=rownames(pca$x)) +
  geom_point() +
  #geom_label()+
  geom_text_repel()
  
  
```
PCA picks find the principle directions that describe the most different between the countries. It found that in the most principle direction (PC1) Ireland is the most different from other country.


The second major result is contained in the 'pca$rotatoin' object or component. :et's plot this to see what PCA is picking up...

```{r}

ggplot(pca$rotation) +
  aes(PC1, rownames(pca$rotation)) + 
  geom_col()

```
In the most principle direction PC1, this graph of rotation shows factors that contribute to the different in the countries. This shows that Soft drinks and Freshfruit consumption is siginificantly higher in Irelands compares to other countries. And other countries consume more frsh fruit and alcoholic dirnks than Ireland. 






